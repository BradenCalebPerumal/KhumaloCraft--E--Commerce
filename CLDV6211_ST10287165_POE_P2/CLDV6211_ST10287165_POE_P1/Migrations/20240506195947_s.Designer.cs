// <auto-generated />
using System;
using CLDV6211_ST10287165_POE_P1.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CLDV6211_ST10287165_POE_P1.Migrations
{
    [DbContext(typeof(CLDV6211_ST10287165_POE_P1Context))]
    [Migration("20240506195947_s")]
    partial class s
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CLDV6211_ST10287165_POE_P1.Models.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientId"));

                    b.Property<string>("CellNum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentityNum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientId");

                    b.ToTable("Client");

                    b.HasData(
                        new
                        {
                            ClientId = 1,
                            CellNum = "123-456-7890",
                            ClientFirstName = "John",
                            Email = "john.doe@example.com",
                            IdentityNum = "1234567890",
                            LastName = "Doe",
                            Password = "password1",
                            Username = "client1"
                        },
                        new
                        {
                            ClientId = 2,
                            CellNum = "987-654-3210",
                            ClientFirstName = "Jane",
                            Email = "jane.smith@example.com",
                            IdentityNum = "0987654321",
                            LastName = "Smith",
                            Password = "password2",
                            Username = "client2"
                        },
                        new
                        {
                            ClientId = 3,
                            CellNum = "555-555-5555",
                            ClientFirstName = "Alice",
                            Email = "alice.johnson@example.com",
                            IdentityNum = "2468013579",
                            LastName = "Johnson",
                            Password = "password3",
                            Username = "client3"
                        },
                        new
                        {
                            ClientId = 4,
                            CellNum = "666-666-6666",
                            ClientFirstName = "Bob",
                            Email = "bob.wilson@example.com",
                            IdentityNum = "1357924680",
                            LastName = "Wilson",
                            Password = "password4",
                            Username = "client4"
                        });
                });

            modelBuilder.Entity("CLDV6211_ST10287165_POE_P1.Models.Customer", b =>
                {
                    b.Property<int>("CustId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustId"));

                    b.Property<string>("CustEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustPasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("CLDV6211_ST10287165_POE_P1.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InStock")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Handcrafted Decorative Collectibles",
                            ClientId = 1,
                            Description = "Native African Navajo Hand Carved Pottery Vase 3 1/2\"-Signed \"IN\" Navajo",
                            ImageType = "Url",
                            ImageUrl = "https://yerbamatehurt.com/eng_pl_Chilean-Yerba-Mate-Cup-COPIAPO-with-beautiful-Virolle-made-of-steel-4871_2.jpg",
                            InStock = "in stock",
                            Name = "Navajo Etched Black Terracotta 3\" Pottery Vase Signed RONDA",
                            Price = 15795.00m
                        },
                        new
                        {
                            Id = 2,
                            Category = "Decorative Collectibles",
                            ClientId = 2,
                            Description = "Made by Pomotso Mafura and painted by Nozipho Ntshalintshali\r\n\r\nDimensions: H 44cm; L 30cm; W 30cm",
                            ImageType = "Url",
                            ImageUrl = "https://www.ardmore-design.com/cdn/shop/products/NP339OCT21_2-626807.jpg?v=1695893700&width=823",
                            InStock = "out of stock",
                            Name = "Tanzanite Leopard Vase",
                            Price = 51000.00m
                        },
                        new
                        {
                            Id = 3,
                            Category = "Handcrafted Decorative Collectibles",
                            ClientId = 3,
                            Description = "African tribal terracotta clay vessel that displays an aged patina, general surface wear,and small scattered nicks.",
                            ImageType = "Url",
                            ImageUrl = "https://www.thewildcoasttradingcompany.co.za/cdn/shop/products/Yanela_African_Pot_2_1024x1024.jpg?v=1575627030",
                            InStock = "in stock",
                            Name = "African Tribal Terracotta Clay Vessel Possible Water Pot 11.75\" High",
                            Price = 12000.00m
                        },
                        new
                        {
                            Id = 4,
                            Category = "Handcrafted Decorative Collectibles",
                            ClientId = 4,
                            Description = "A SINGLE Figure Made of High Quality Poly Resin - Hand Painted Décor -Measurement: 15.5 inches tall.",
                            ImageType = "Url",
                            ImageUrl = "https://m.media-amazon.com/images/I/41lsqyheQcL._SL500_.jpg",
                            InStock = "in stock",
                            Name = "African Figurine Sculpture Colorful Dress Sitting Down Lady Figurine Holding Vase",
                            Price = 5500.00m
                        });
                });

            modelBuilder.Entity("CLDV6211_ST10287165_POE_P1.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("CLDV6211_ST10287165_POE_P1.Models.Product", b =>
                {
                    b.HasOne("CLDV6211_ST10287165_POE_P1.Models.Client", "Client")
                        .WithMany("Products")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("CLDV6211_ST10287165_POE_P1.Models.Client", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
